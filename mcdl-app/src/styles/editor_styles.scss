// Variables
:root {
  --editor-bg: #ffffff;
  --toolbar-bg: #f8f9fa;
  --button-hover: #e9ecef;
  --button-active: #e2e6ea;
  --border-color: #dee2e6;
  --text-primary: #212529;
  --text-muted: #6c757d;
  --border-radius: 6px;
  --transition: 0.2s ease;
}

// Menu bar container
.control-group {
  background-color: var(--toolbar-bg);
  border-bottom: 1px solid var(--border-color);
  padding: 0.5rem;
  position: sticky;
  top: 0;
  z-index: 10;
}

// Button group container
.button-group {
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem;
  justify-content: flex-start;
  align-items: center;
}

// Style for each button in the menu
.button-group button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 32px;
  min-width: 32px;
  padding: 0 0.5rem;
  background: transparent;
  border: 1px solid transparent;
  border-radius: var(--border-radius);
  color: var(--text-primary);
  font-size: 0.875rem;
  cursor: pointer;
  transition: all var(--transition);

  &:hover:not(:disabled) {
    background-color: var(--button-hover);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(13, 110, 253, 0.25);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  &.is-active {
    background-color: var(--button-active);
    color: #0d6efd;
  }
}

// Editor container
.tiptap {
  background-color: var(--editor-bg);
  min-height: calc(100vh - 56px);
  display: flex;
  flex-direction: column;
  
  .ProseMirror {
    padding: 1.5rem;
    outline: none;
    flex-grow: 1;
    min-height: calc(100vh - 120px);

    > * + * {
      margin-top: 0.75em;
    }
  }

  // Typography
  p {
    line-height: 1.6;
  }

  h1, h2, h3, h4, h5, h6 {
    line-height: 1.3;
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: var(--text-primary);
  }

  h1 { font-size: 2rem; }
  h2 { font-size: 1.5rem; }
  h3 { font-size: 1.25rem; }
  h4 { font-size: 1.125rem; }
  h5, h6 { font-size: 1rem; }

  // Lists
  ul, ol {
    padding-left: 1.25rem;
    margin: 1rem 0;

    li {
      margin: 0.5rem 0;
      p { margin: 0; }
    }
  }

  // Code blocks
  pre {
    background: #f8f9fa;
    border-radius: var(--border-radius);
    padding: 0.75rem 1rem;
    margin: 1rem 0;
    overflow-x: auto;

    code {
      background: none;
      padding: 0;
      font-size: 0.875rem;
      color: inherit;
    }
  }

  code {
    background: rgba(#616161, 0.1);
    border-radius: 3px;
    padding: 0.2em 0.4em;
    font-size: 0.875em;
  }

  // Blockquotes
  blockquote {
    border-left: 3px solid var(--border-color);
    padding-left: 1rem;
    margin: 1rem 0;
    color: var(--text-muted);
  }

  // Horizontal rule
  hr {
    border: none;
    border-top: 1px solid var(--border-color);
    margin: 2rem 0;
  }

  // Editor status bar
  .editor-status-bar {
    background-color: var(--toolbar-bg);
    border-top: 1px solid var(--border-color);
    position: sticky;
    bottom: 0;
    z-index: 10;

    .btn-primary {
      min-width: 100px;
    }
  }
}

// Placeholder
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: var(--text-muted);
  pointer-events: none;
  height: 0;
}

// New List and Item Forms
.new-list-form,
.new-item-form {
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  transition: all 0.3s ease-in-out;
  margin-bottom: 1rem;
  transform: translateY(-10px);
  position: relative;
  z-index: 100;

  &.show {
    max-height: 300px;
    opacity: 1;
    transform: translateY(0);
  }

  .card {
    border: none;
    background-color: var(--editor-bg);
    transition: box-shadow 0.2s ease;
    margin-bottom: 0;

    &:hover {
      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
    }
  }

  .input-group {
    .btn-primary {
      min-width: 40px;
      padding: 0.375rem 0.75rem;
    }
  }

  textarea {
    resize: none;
    transition: border-color 0.2s ease;

    &:focus {
      border-color: #0d6efd;
      box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
  }

  .btn-link {
    &:hover {
      color: var(--text-primary) !important;
    }
  }
}

// Add styles for the list items container to handle overflow
.list-group {
  position: relative;
  z-index: 1;
}